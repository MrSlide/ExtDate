{"version":3,"sources":["ExtDate.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;oBA0BwB,O;AAAT,WAAS,OAAT,CAAkB,IAAlB,EAAwB,KAAxB,EAA+B,GAA/B,EAAoC,IAApC,EAA0C,OAA1C,EAAmD,OAAnD,EAA4D,YAA5D,EAA0E;AACvF,QAAI,EAAE,gBAAgB,OAAlB,CAAJ,EAAgC;AAC9B,YAAM,IAAI,SAAJ,CAAc,mCAAd,CAAN;AACD;;AAGD,QAAM,0CAAW,IAAX,2CAAmB,SAAnB,MAAN;;AAEA,WAAO,IAAP;AACD;;AAED,MAAM,cAAc,OAAO,mBAAP,CAA2B,IAA3B,CAApB;;AAEA,cAAY,OAAZ,CAAoB,UAAU,IAAV,EAAgB;AAClC,QAAI,OAAO,KAAK,IAAL,CAAP,KAAsB,UAA1B,EAAsC;AACpC,cAAQ,IAAR,IAAgB,KAAK,IAAL,CAAhB;AACD;AACF,GAJD","file":"ExtDate.js","sourcesContent":["'use strict'\n\n/**\n * @name ExtDate\n * @desc Extends the native Date object with new useful methods.\n * @author Luis Rodrigues (http://www.luisrodriguesweb.com)\n * @version 0.1.0\n * @license MIT\n */\n\n/**\n * Creates an instance of ExtDate which implements new methods for\n * the Date object.\n *\n * @access public\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n * @return {Date} - The Date instance with the added methods.\n * @since 0.1.0\n *\n * @example\n * new ExtDate();\n * new ExtDate(547979648008);\n * new ExtDate('1995-12-17T03:24:00');\n * new ExtDate(1995, 11, 17);\n * new ExtDate(1995, 11, 17, 3, 24, 0);\n */\nexport default function ExtDate (year, month, day, hour, minutes, seconds, milliseconds) {\n  if (!(this instanceof ExtDate)) {\n    throw new TypeError('Cannot call a class as a function')\n  }\n\n  // Create a Date instance to use internally\n  const date = new Date(...arguments)\n\n  return date\n}\n\nconst staticProps = Object.getOwnPropertyNames(Date)\n\nstaticProps.forEach(function (prop) {\n  if (typeof Date[prop] === 'function') {\n    ExtDate[prop] = Date[prop]\n  }\n})\n"],"sourceRoot":"/source/"}